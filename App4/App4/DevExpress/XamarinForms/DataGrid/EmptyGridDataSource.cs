// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid
{
    using System;
    using System.Collections.Specialized;
    
    internal class EmptyGridDataSource : IGridDataSource
    {
        private NotifyCollectionChangedEventHandler onRowCollectionChanged;
        private NotifyCollectionChangedEventHandler onGroupCollectionChanged;
        
        event NotifyCollectionChangedEventHandler IGridDataSource.GroupCollectionChanged
        {
            add
            {
                this.onGroupCollectionChanged = (NotifyCollectionChangedEventHandler) Delegate.Combine((Delegate) this.onGroupCollectionChanged, (Delegate) value);
            }
            remove
            {
                this.onGroupCollectionChanged = (NotifyCollectionChangedEventHandler) Delegate.Remove((Delegate) this.onGroupCollectionChanged, (Delegate) value);
            }
        }
        
        event NotifyCollectionChangedEventHandler IGridDataSource.RowCollectionChanged
        {
            add
            {
                this.onRowCollectionChanged = (NotifyCollectionChangedEventHandler) Delegate.Combine((Delegate) this.onRowCollectionChanged, (Delegate) value);
            }
            remove
            {
                this.onRowCollectionChanged = (NotifyCollectionChangedEventHandler) Delegate.Remove((Delegate) this.onRowCollectionChanged, (Delegate) value);
            }
        }
        
        public int AddNewRow(IEditableRowData rowData) => 
            -2147483648;
        
        public IEditableRowData CreateNewRow() => 
            null;
        
        public int DeleteRow(int rowHandle) => 
            -2147483648;
        
        IGroupInfo IGridDataSource.GetGroup(int groupHandle) => 
            null;
        
        public IRowData GetRow(int rowHandle, IRowData reuseRow) => 
            null;
        
        public bool SupportsSorting =>
            false;
        
        public bool SupportsGrouping =>
            false;
        
        public bool SupportsFiltering =>
            false;
        
        public int RowCount =>
            0;
        
        public int SelectedRow
        {
            get => 
                -1;
            set
            {
            }
        }
        
        public Type ActualDataSourceType =>
            base.GetType();
        
        int IGridDataSource.GroupCount =>
            0;
    }
}
