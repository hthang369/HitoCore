// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid.Internal
{
    using DevExpress.XamarinForms.DataGrid;
    using System;
    
    public static class VisibleIndexHelper
    {
        public static int GetRowHandleByVisibleIndex(int visibleIndex, IGridDataController dataController)
        {
            int groupCount = dataController.GroupCount;
            if (groupCount == 0)
            {
                return visibleIndex;
            }
            if (visibleIndex >= 0)
            {
                int num2 = 0;
                for (int i = -1; i >= (-1 * groupCount); i--)
                {
                    if (num2 == visibleIndex)
                    {
                        return i;
                    }
                    num2++;
                    IGroupInfo groupInfo = dataController.GetGroupInfo(i);
                    if (groupInfo == null)
                    {
                        return -2147483648;
                    }
                    if (!groupInfo.IsCollapsed)
                    {
                        int num4 = num2 + groupInfo.RowCount;
                        if (visibleIndex < num4)
                        {
                            return (groupInfo.FirstRowHandle + (groupInfo.RowCount - (num4 - visibleIndex)));
                        }
                        num2 = num4;
                    }
                }
            }
            return -2147483648;
        }
        
        public static int GetVisibleIndexByRowHandle(int rowHandle, IGridDataController dataController)
        {
            int groupCount = dataController.GroupCount;
            if (groupCount == 0)
            {
                return rowHandle;
            }
            int num2 = 0;
            for (int i = -1; i >= (-1 * groupCount); i--)
            {
                if (i == rowHandle)
                {
                    return num2;
                }
                num2++;
                IGroupInfo groupInfo = dataController.GetGroupInfo(i);
                if (groupInfo == null)
                {
                    return -1;
                }
                if (groupInfo.IsCollapsed)
                {
                    if ((rowHandle >= 0) && (rowHandle <= groupInfo.LastRowHandle))
                    {
                        return -1;
                    }
                }
                else
                {
                    if ((rowHandle >= groupInfo.FirstRowHandle) && (rowHandle <= groupInfo.LastRowHandle))
                    {
                        return ((num2 + rowHandle) - groupInfo.FirstRowHandle);
                    }
                    num2 += groupInfo.RowCount;
                }
            }
            return -1;
        }
    }
}
