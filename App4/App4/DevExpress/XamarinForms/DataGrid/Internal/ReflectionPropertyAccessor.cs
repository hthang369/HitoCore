// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid.Internal
{
    using System;
    using System.Reflection;
    
    public class ReflectionPropertyAccessor : PropertyAccessor
    {
        private readonly PropertyInfo property;
        
        public ReflectionPropertyAccessor(Type objectType, string propertyName, PropertyInfo property) : base(objectType, propertyName)
        {
            this.property = property;
        }
        
        public override object GetValue(object obj) => 
            this.property.GetValue(obj);
        
        public override T GetValueGeneric<T>(object obj) => 
            ((T) this.property.GetValue(obj));
        
        internal static void SetPropertyValue(object obj, object value, PropertyInfo property)
        {
            try
            {
                if ((value == null) || IntrospectionExtensions.GetTypeInfo(property.get_PropertyType()).IsAssignableFrom(IntrospectionExtensions.GetTypeInfo(value.GetType())))
                {
                    property.SetValue(obj, value);
                }
                else
                {
                    object obj1 = Convert.ChangeType(value, property.get_PropertyType());
                    value = obj1;
                    property.SetValue(obj, value);
                }
            }
            catch
            {
            }
        }
        
        public override void SetValue(object obj, object value)
        {
            SetPropertyValue(obj, value, this.property);
        }
        
        public override Type PropertyType =>
            this.property.get_PropertyType();
    }
}
