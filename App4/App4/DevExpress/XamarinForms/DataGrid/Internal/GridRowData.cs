// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid.Internal
{
    using DevExpress.XamarinForms.DataGrid;
    using System;
    using System.Runtime.CompilerServices;
    
    public class GridRowData : IEditableRowData, IRowData
    {
        private readonly UnboundColumnsDataSource dataSource;
        
        public GridRowData(UnboundColumnsDataSource dataSource)
        {
            this.dataSource = dataSource;
        }
        
        public object GetFieldValue(string fieldName)
        {
            object obj2;
            return (!this.dataSource.TryGetUnboundFieldValue(this.InnerRowData, fieldName, out obj2) ? this.InnerRowData.GetFieldValue(fieldName) : obj2);
        }
        
        public T GetFieldValueGeneric<T>(string fieldName)
        {
            object obj2;
            return (!this.dataSource.TryGetUnboundFieldValue(this.InnerRowData, fieldName, out obj2) ? this.InnerRowData.GetFieldValueGeneric<T>(fieldName) : ((T) obj2));
        }
        
        public void SetFieldValue(string fieldName, object value)
        {
            Action<IRowData, object> action = this.dataSource.TryGetUnboundFieldSetter(fieldName);
            if (action != null)
            {
                action(this.InnerRowData, value);
            }
            else
            {
                IEditableRowData innerRowData = this.InnerRowData as IEditableRowData;
                if (innerRowData != null)
                {
                    innerRowData.SetFieldValue(fieldName, value);
                }
            }
        }
        
        public IRowData InnerRowData { get; set; }
        
        public int RowHandle
        {
            get => 
                this.InnerRowData.RowHandle;
            set => 
                (this.InnerRowData.RowHandle = value);
        }
        
        public object DataObject =>
            this.InnerRowData.DataObject;
    }
}
