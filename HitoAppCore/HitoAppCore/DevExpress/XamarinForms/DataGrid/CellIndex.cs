// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid
{
    using System;
    using System.Runtime.CompilerServices;
    using System.Runtime.InteropServices;
    
    [StructLayout(LayoutKind.Sequential)]
    public struct CellIndex
    {
        private readonly int rowHandle;
        private readonly string fieldName;
        public static CellIndex InvalidIndex =>
            new CellIndex(-2147483648, string.Empty);
        public static bool operator ==(CellIndex a, CellIndex b) => 
            ((a.rowHandle == b.rowHandle) && (a.fieldName == b.fieldName));
        
        public static bool operator !=(CellIndex a, CellIndex b) => 
            !(a == b);
        
        public int RowHandle =>
            this.rowHandle;
        public string FieldName =>
            this.fieldName;
        public bool IsValid =>
            (this != InvalidIndex);
        public int ColumnIndex { get; set; }
        public CellIndex(int rowHandle, string fieldName)
        {
            this.fieldName = fieldName;
            this.rowHandle = rowHandle;
            this.ColumnIndex = -1;
        }
        
        public override bool Equals(object obj)
        {
            if ((obj == null) || (obj.GetType() != this.GetType()))
            {
                return false;
            }
            CellIndex index = (CellIndex) obj;
            return ((index.rowHandle == this.rowHandle) && (index.fieldName == this.fieldName));
        }
        
        public override int GetHashCode() => 
            (this.rowHandle ^ ((this.fieldName == null) ? 0 : this.fieldName.GetHashCode()));
    }
}
