// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid.Internal
{
    using DevExpress.XamarinForms.DataGrid;
    using System;
    using System.Collections.Generic;
    using System.Runtime.CompilerServices;
    
    internal class InnerGroupInfo : IGroupInfo
    {
        private int firstRowIndex;
        private int lastRowIndex = -1;
        private GridColumnSummaryCollection summaries;
        private object groupValue;
        
        public int Index { get; set; }
        
        public int RowHandle =>
            ~this.Index;
        
        public bool IsCollapsed { get; set; }
        
        public int Count =>
            ((this.LastRowIndex - this.FirstRowIndex) + 1);
        
        public string FieldName { get; set; }
        
        public object GroupValue
        {
            get => 
                this.groupValue;
            set => 
                this.groupValue = value;
        }
        
        public GridColumnSummaryCollection Summaries
        {
            get => 
                this.summaries;
            set
            {
                if (!object.ReferenceEquals(this.summaries, value))
                {
                    this.summaries = value;
                    this.summaries.RowHandleFrom = this.FirstRowIndex;
                    this.summaries.RowHandleTo = this.LastRowIndex;
                    this.summaries.GroupInfo = this;
                }
            }
        }
        
        public int FirstRowIndex
        {
            get => 
                this.firstRowIndex;
            set
            {
                if (this.FirstRowIndex != value)
                {
                    this.firstRowIndex = value;
                    if (this.Summaries != null)
                    {
                        this.Summaries.RowHandleFrom = value;
                    }
                }
            }
        }
        
        public int LastRowIndex
        {
            get => 
                this.lastRowIndex;
            set
            {
                if (this.LastRowIndex != value)
                {
                    this.lastRowIndex = value;
                    if (this.Summaries != null)
                    {
                        this.Summaries.RowHandleTo = value;
                    }
                }
            }
        }
        
        string IGroupInfo.FieldName =>
            this.FieldName;
        
        object IGroupInfo.Value =>
            this.GroupValue;
        
        IReadOnlyList<GridColumnSummary> IGroupInfo.Summaries =>
            ((IReadOnlyList<GridColumnSummary>) this.Summaries);
        
        bool IGroupInfo.IsCollapsed =>
            this.IsCollapsed;
        
        int IGroupInfo.GroupRowHandle =>
            ~this.Index;
        
        int IGroupInfo.FirstRowHandle =>
            this.FirstRowIndex;
        
        int IGroupInfo.LastRowHandle =>
            this.LastRowIndex;
        
        int IGroupInfo.RowCount =>
            this.Count;
    }
}
