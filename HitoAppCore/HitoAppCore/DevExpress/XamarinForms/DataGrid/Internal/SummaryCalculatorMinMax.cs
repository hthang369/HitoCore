// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid.Internal
{
    using DevExpress.XamarinForms.DataGrid;
    using System;
    
    public abstract class SummaryCalculatorMinMax : SummaryCalculator
    {
        private IComparable summaryValue;
        
        protected SummaryCalculatorMinMax()
        {
        }
        
        public override bool Begin()
        {
            this.summaryValue = null;
            return true;
        }
        
        public override object End() => 
            this.summaryValue;
        
        public override object GetFinalResult() => 
            ((this.summaryValue != null) ? ((object) this.summaryValue) : ((object) 0));
        
        public override void ProcessValue(IRowData row, object value, IToDecimalConverter converter)
        {
            IComparable comparable = value as IComparable;
            if (this.summaryValue == null)
            {
                this.summaryValue = comparable;
            }
            else if ((comparable != null) && this.ShouldAssignSummaryValue(comparable.CompareTo(this.summaryValue)))
            {
                this.summaryValue = comparable;
            }
        }
        
        protected abstract bool ShouldAssignSummaryValue(int compareResult);
    }
}
