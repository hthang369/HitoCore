// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid.Internal
{
    using System;
    using System.Collections;
    using System.Collections.Specialized;
    using System.Runtime.CompilerServices;
    
    public class CustomNotifyCollectionChangedEventArgs : NotifyCollectionChangedEventArgs
    {
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action) : base(action)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems) : base(action, changedItems)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem) : base(action, changedItem)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems) : base(action, newItems, oldItems)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int startingIndex) : base(action, changedItems, startingIndex)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index) : base(action, changedItem, index)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem) : base(action, newItem, oldItem)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex) : base(action, newItems, oldItems, startingIndex)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex) : base(action, changedItems, index, oldIndex)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex) : base(action, changedItem, index, oldIndex)
        {
        }
        
        public CustomNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem, int index) : base(action, newItem, oldItem, index)
        {
        }
        
        public static CustomNotifyCollectionChangedEventArgs Create(NotifyCollectionChangedEventArgs e)
        {
            switch (e.Action)
            {
                case NotifyCollectionChangedAction.Remove:
                    return new CustomNotifyCollectionChangedEventArgs((NotifyCollectionChangedAction) NotifyCollectionChangedAction.Remove, e.OldItems, e.OldStartingIndex);
                
                case NotifyCollectionChangedAction.Replace:
                    return new CustomNotifyCollectionChangedEventArgs((NotifyCollectionChangedAction) NotifyCollectionChangedAction.Replace, e.NewItems, e.OldItems, e.NewStartingIndex);
                
                case NotifyCollectionChangedAction.Move:
                    return new CustomNotifyCollectionChangedEventArgs((NotifyCollectionChangedAction) NotifyCollectionChangedAction.Move, e.NewItems, e.NewStartingIndex, e.OldStartingIndex);
                
                case NotifyCollectionChangedAction.Reset:
                    return new CustomNotifyCollectionChangedEventArgs((NotifyCollectionChangedAction) NotifyCollectionChangedAction.Reset);
            }
            return new CustomNotifyCollectionChangedEventArgs((NotifyCollectionChangedAction) NotifyCollectionChangedAction.Add, e.NewItems, e.NewStartingIndex);
        }
        
        public static void SetRowHandle(NotifyCollectionChangedEventArgs args, int rowHandle)
        {
            CustomNotifyCollectionChangedEventArgs args2 = args as CustomNotifyCollectionChangedEventArgs;
            if (args2 != null)
            {
                args2.RowHandle = rowHandle;
            }
        }
        
        public int RowHandle { get; set; }
    }
}
