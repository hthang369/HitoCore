// Generated by .NET Reflector from D:\workspace\mobile\hito-mobile\HitoApp\lampart_lib_dll\DevExpress.XamarinForms.Grid.dll
namespace DevExpress.XamarinForms.DataGrid.Internal
{
    using DevExpress.Data.Helpers;
    using DevExpress.XamarinForms.DataGrid.Localization;
    using System;
    using System.Globalization;
    
    public class DateRangeRowData : TransformedRowData
    {
        private readonly OutlookHelper helper = new OutlookHelper();
        
        public override object GetGroupValue(object transformedValue) => 
            this.helper.GetOutlookDisplayText((OutlookInterval) transformedValue);
        
        protected override object TransformValue(object value)
        {
            this.helper.UpdateToday();
            return this.helper.GetOutlookInterval(new DateTime?(((DateTime) value).Date));
        }
        
        private class OutlookHelper : OutlookDateHelper
        {
            private DateTime sortStartTime;
            private DateTime sortZeroTime;
            private DateTime sortStartWeek;
            private DateTime today;
            private string[] outlookNames;
            
            public OutlookHelper()
            {
                this.UpdateToday();
            }
            
            private string GetDayName(int day)
            {
                int num = (int) CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;
                day = (day + num) % 7;
                return CultureInfo.CurrentCulture.DateTimeFormat.DayNames[day];
            }
            
            public string GetOutlookDisplayText(OutlookInterval interval)
            {
                int id = (int) interval;
                string outlookLocaizedString = this.GetOutlookLocaizedString(id);
                if (((interval >= OutlookInterval.D0) && (interval <= OutlookInterval.D6)) && string.IsNullOrEmpty(outlookLocaizedString))
                {
                    outlookLocaizedString = this.GetDayName(id - 0x10);
                }
                if (((interval >= OutlookInterval.PD0) && (interval <= OutlookInterval.PD6)) && string.IsNullOrEmpty(outlookLocaizedString))
                {
                    outlookLocaizedString = this.GetDayName(id - 6);
                }
                return outlookLocaizedString;
            }
            
            public string GetOutlookLocaizedString(int id)
            {
                if (this.outlookNames == null)
                {
                    this.outlookNames = this.GetOutlookLocalizedStrings();
                }
                return ((this.outlookNames.Length > id) ? this.outlookNames[id] : string.Empty);
            }
            
            protected virtual string[] GetOutlookLocalizedStrings()
            {
                char[] chArray1 = new char[] { ';' };
                return GridLocalizer.GetString(GridStringId.GridOutlookIntervals).Split(chArray1);
            }
            
            public void UpdateToday()
            {
                if (DateTime.Today != this.today)
                {
                    this.today = DateTime.Today;
                    this.SortStartTime = this.today;
                }
            }
            
            public DateTime SortStartTime
            {
                get => 
                    this.sortStartTime;
                set
                {
                    this.sortStartTime = value;
                    this.sortStartWeek = GetWeekStart(value, CultureInfo.CurrentCulture.DateTimeFormat);
                    this.sortZeroTime = new DateTime(value.Year, value.Month, value.Day);
                }
            }
            
            protected override DateTime SortZeroTime =>
                this.sortZeroTime;
            
            protected override DateTime SortStartWeek =>
                this.sortStartWeek;
        }
    }
}
